// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package monitoring is a generated GoMock package.
package monitoring

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDao is a mock of Dao interface.
type MockDao struct {
	ctrl     *gomock.Controller
	recorder *MockDaoMockRecorder
}

// MockDaoMockRecorder is the mock recorder for MockDao.
type MockDaoMockRecorder struct {
	mock *MockDao
}

// NewMockDao creates a new mock instance.
func NewMockDao(ctrl *gomock.Controller) *MockDao {
	mock := &MockDao{ctrl: ctrl}
	mock.recorder = &MockDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDao) EXPECT() *MockDaoMockRecorder {
	return m.recorder
}

// AddEntityRequestStat mocks base method.
func (m *MockDao) AddEntityRequestStat(ctx context.Context, entityRequest *EntityRequestStat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEntityRequestStat", ctx, entityRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEntityRequestStat indicates an expected call of AddEntityRequestStat.
func (mr *MockDaoMockRecorder) AddEntityRequestStat(ctx, entityRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEntityRequestStat", reflect.TypeOf((*MockDao)(nil).AddEntityRequestStat), ctx, entityRequest)
}

// DeleteEntityRequestsStatByNamespace mocks base method.
func (m *MockDao) DeleteEntityRequestsStatByNamespace(ctx context.Context, namespace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEntityRequestsStatByNamespace", ctx, namespace)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEntityRequestsStatByNamespace indicates an expected call of DeleteEntityRequestsStatByNamespace.
func (mr *MockDaoMockRecorder) DeleteEntityRequestsStatByNamespace(ctx, namespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEntityRequestsStatByNamespace", reflect.TypeOf((*MockDao)(nil).DeleteEntityRequestsStatByNamespace), ctx, namespace)
}

// GetAllEntityRequestsStat mocks base method.
func (m *MockDao) GetAllEntityRequestsStat(ctx context.Context) (*[]EntityRequestStat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllEntityRequestsStat", ctx)
	ret0, _ := ret[0].(*[]EntityRequestStat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllEntityRequestsStat indicates an expected call of GetAllEntityRequestsStat.
func (mr *MockDaoMockRecorder) GetAllEntityRequestsStat(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEntityRequestsStat", reflect.TypeOf((*MockDao)(nil).GetAllEntityRequestsStat), ctx)
}

// GetMonitoringTopics mocks base method.
func (m *MockDao) GetMonitoringTopics(ctx context.Context) (*[]MonitoringTopic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMonitoringTopics", ctx)
	ret0, _ := ret[0].(*[]MonitoringTopic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMonitoringTopics indicates an expected call of GetMonitoringTopics.
func (mr *MockDaoMockRecorder) GetMonitoringTopics(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMonitoringTopics", reflect.TypeOf((*MockDao)(nil).GetMonitoringTopics), ctx)
}

// GetMonitoringVhosts mocks base method.
func (m *MockDao) GetMonitoringVhosts(ctx context.Context) (*[]MonitoringVhost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMonitoringVhosts", ctx)
	ret0, _ := ret[0].(*[]MonitoringVhost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMonitoringVhosts indicates an expected call of GetMonitoringVhosts.
func (mr *MockDaoMockRecorder) GetMonitoringVhosts(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMonitoringVhosts", reflect.TypeOf((*MockDao)(nil).GetMonitoringVhosts), ctx)
}
